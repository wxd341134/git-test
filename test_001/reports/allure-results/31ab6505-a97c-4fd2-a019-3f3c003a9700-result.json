{"name": "刷新和关闭卷宗管理", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF761B8DF85+26693]\n\t(No symbol) [0x00007FF761AEEAD0]\n\t(No symbol) [0x00007FF7619791CA]\n\t(No symbol) [0x00007FF7619CF747]\n\t(No symbol) [0x00007FF7619CF97C]\n\t(No symbol) [0x00007FF761A233C7]\n\t(No symbol) [0x00007FF7619F792F]\n\t(No symbol) [0x00007FF761A200B8]\n\t(No symbol) [0x00007FF7619F76C3]\n\t(No symbol) [0x00007FF7619C0490]\n\t(No symbol) [0x00007FF7619C1743]\n\tGetHandleVerifier [0x00007FF761EE436D+3525677]\n\tGetHandleVerifier [0x00007FF761EF7F3B+3606523]\n\tGetHandleVerifier [0x00007FF761EECEE3+3561379]\n\tGetHandleVerifier [0x00007FF761C57C0A+853194]\n\t(No symbol) [0x00007FF761AF990F]\n\t(No symbol) [0x00007FF761AF5674]\n\t(No symbol) [0x00007FF761AF5816]\n\t(No symbol) [0x00007FF761AE4D89]\n\tBaseThreadInitThunk [0x00007FF8EA71E8D7+23]\n\tRtlUserThreadStart [0x00007FF8EC15BF6C+44]", "trace": "self = <FgAI.test_001.test_DossierU.TestDossierUpload object at 0x00000288DEBF9D90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1aed267f4da1a1cf632595a07edd2b4e\")>\nneed_login = True\n\n    @pytest.fixture(autouse=True)\n    def setup(self, driver, need_login):\n        \"\"\"测试前置：初始化driver和wait\"\"\"\n        self.driver = driver\n        self.wait = WebDriverWait(self.driver, 10)\n    \n        if need_login:\n            # 使用框架的登录页面\n            login_page = LoginPage(self.driver)\n>           login_page.login()\n\ntest_DossierU.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\login_page.py:43: in login\n    element = self.find_element(self.username_input)\n..\\pages\\base_page.py:23: in find_element\n    element = self.wait.until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1aed267f4da1a1cf632595a07edd2b4e\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000288DF488160>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF761B8DF85+26693]\nE       \t(No symbol) [0x00007FF761AEEAD0]\nE       \t(No symbol) [0x00007FF7619791CA]\nE       \t(No symbol) [0x00007FF7619CF747]\nE       \t(No symbol) [0x00007FF7619CF97C]\nE       \t(No symbol) [0x00007FF761A233C7]\nE       \t(No symbol) [0x00007FF7619F792F]\nE       \t(No symbol) [0x00007FF761A200B8]\nE       \t(No symbol) [0x00007FF7619F76C3]\nE       \t(No symbol) [0x00007FF7619C0490]\nE       \t(No symbol) [0x00007FF7619C1743]\nE       \tGetHandleVerifier [0x00007FF761EE436D+3525677]\nE       \tGetHandleVerifier [0x00007FF761EF7F3B+3606523]\nE       \tGetHandleVerifier [0x00007FF761EECEE3+3561379]\nE       \tGetHandleVerifier [0x00007FF761C57C0A+853194]\nE       \t(No symbol) [0x00007FF761AF990F]\nE       \t(No symbol) [0x00007FF761AF5674]\nE       \t(No symbol) [0x00007FF761AF5816]\nE       \t(No symbol) [0x00007FF761AE4D89]\nE       \tBaseThreadInitThunk [0x00007FF8EA71E8D7+23]\nE       \tRtlUserThreadStart [0x00007FF8EC15BF6C+44]\n\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "测试刷新和关闭功能", "attachments": [{"name": "log", "source": "689052d3-5354-404a-a47e-bd0f13683834-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "b4c1c842-98fc-42e8-ad7a-f6a507e837ac-attachment.txt", "type": "text/plain"}], "start": 1742898335685, "stop": 1742898335685, "uuid": "19dd6843-ceed-486c-88e6-518def2c88ff", "historyId": "11a359690fe1e7144d1c165ef2f1ac1e", "testCaseId": "11a359690fe1e7144d1c165ef2f1ac1e", "fullName": "test_001.test_DossierU.TestDossierUpload#test_refresh_and_close", "labels": [{"name": "epic", "value": "FGAI自动化测试"}, {"name": "story", "value": "卷宗管理"}, {"name": "feature", "value": "卷宗管理"}, {"name": "parentSuite", "value": "test_001"}, {"name": "suite", "value": "test_DossierU"}, {"name": "subSuite", "value": "TestDossierUpload"}, {"name": "host", "value": "DESKTOP-3S8JLNL"}, {"name": "thread", "value": "23732-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_001.test_DossierU"}]}