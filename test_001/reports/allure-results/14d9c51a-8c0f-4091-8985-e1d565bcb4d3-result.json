{"name": "辅助阅卷测试", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"ant-tree-checkbox-inner\"></span> is not clickable at point (67, 384). Other element would receive the click: <div tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"rcDialogTitle0\" class=\"ant-modal-wrap animate__animated animate__fadeInDownBig\">...</div>\n  (Session info: chrome=134.0.6998.177)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6F5FEDF85+26693]\n\t(No symbol) [0x00007FF6F5F4EAD0]\n\t(No symbol) [0x00007FF6F5DD91CA]\n\t(No symbol) [0x00007FF6F5E375E9]\n\t(No symbol) [0x00007FF6F5E34FA2]\n\t(No symbol) [0x00007FF6F5E32051]\n\t(No symbol) [0x00007FF6F5E30F76]\n\t(No symbol) [0x00007FF6F5E227E4]\n\t(No symbol) [0x00007FF6F5E578EA]\n\t(No symbol) [0x00007FF6F5E22096]\n\t(No symbol) [0x00007FF6F5E57B00]\n\t(No symbol) [0x00007FF6F5E800B8]\n\t(No symbol) [0x00007FF6F5E576C3]\n\t(No symbol) [0x00007FF6F5E20490]\n\t(No symbol) [0x00007FF6F5E21743]\n\tGetHandleVerifier [0x00007FF6F634436D+3525677]\n\tGetHandleVerifier [0x00007FF6F6357F3B+3606523]\n\tGetHandleVerifier [0x00007FF6F634CEE3+3561379]\n\tGetHandleVerifier [0x00007FF6F60B7C0A+853194]\n\t(No symbol) [0x00007FF6F5F5990F]\n\t(No symbol) [0x00007FF6F5F55674]\n\t(No symbol) [0x00007FF6F5F55816]\n\t(No symbol) [0x00007FF6F5F44D89]\n\tBaseThreadInitThunk [0x00007FF8EA71E8D7+23]\n\tRtlUserThreadStart [0x00007FF8EC15BF6C+44]", "trace": "self = <FgAI.test_001.AssistedG2.TestAssistedReading object at 0x000002165F230A90>\n\n    @allure.story(\"辅助阅卷流程\")\n    @allure.title(\"辅助阅卷测试\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_assisted_reading(self):\n        \"\"\"测试辅助阅卷流程\"\"\"\n        try:\n            # 1. 登录系统\n            with allure.step(\"登录系统\"):\n                logger.info(\"开始登录系统\")\n                self.login_page.login()\n                time.sleep(3)  # 增加登录后的等待时间\n                logger.info(\"登录成功\")\n                self.take_screenshot(\"login_success\")\n    \n            # 2. 点击辅助阅卷\n            with allure.step(\"点击辅助阅卷\"):\n                self.assisted_page.click_auxiliary_reading()\n                self.take_screenshot(\"auxiliary_reading_clicked\")\n    \n            # 3. 点击庭审笔录1\n            with allure.step(\"点击庭审笔录1\"):\n                self.assisted_page.click_court_record1()\n                self.take_screenshot(\"court_record1_clicked\")\n    \n            # 4. 设为庭审笔录和输入处理意见\n            with allure.step(\"设为庭审笔录并输入处理意见\"):\n                (self.assisted_page\n                 .set_as_court_record()\n                 .enter_opinions(\"无意见1\", \"无意见2\")\n                 .confirm_settings())\n                self.take_screenshot(\"set_court_record_complete\")\n    \n            # 5. 取消设置庭审笔录\n            with allure.step(\"取消设置庭审笔录\"):\n                self.assisted_page.cancel_set_record()\n                self.take_screenshot(\"cancel_set_record_complete\")\n    \n            # 6. 下载PDF\n            with allure.step(\"下载笔录PDF\"):\n                self.assisted_page.download_pdf()\n                self.take_screenshot(\"pdf_download_complete\")\n    \n            # 7. 添加庭审笔录2为证据\n            with allure.step(\"添加庭审笔录2为证据\"):\n                self.assisted_page.add_court_record2_as_evidence()\n                self.take_screenshot(\"add_evidence_complete\")\n    \n            # 8. 将庭审笔录3添加为证据\n            with allure.step(\"将庭审笔录3添加为证据\"):\n>               self.assisted_page.add_court_record3_as_evidence()\n\nAssistedG2.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\assisted_reading_page.py:314: in add_court_record3_as_evidence\n    court_record3_checkbox.click()\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002165F230FA0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF6F5F44D89]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8EA71E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FF8EC15BF6C+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"ant-tree-checkbox-inner\"></span> is not clickable at point (67, 384). Other element would receive the click: <div tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"rcDialogTitle0\" class=\"ant-modal-wrap animate__animated animate__fadeInDownBig\">...</div>\nE         (Session info: chrome=134.0.6998.177)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6F5FEDF85+26693]\nE       \t(No symbol) [0x00007FF6F5F4EAD0]\nE       \t(No symbol) [0x00007FF6F5DD91CA]\nE       \t(No symbol) [0x00007FF6F5E375E9]\nE       \t(No symbol) [0x00007FF6F5E34FA2]\nE       \t(No symbol) [0x00007FF6F5E32051]\nE       \t(No symbol) [0x00007FF6F5E30F76]\nE       \t(No symbol) [0x00007FF6F5E227E4]\nE       \t(No symbol) [0x00007FF6F5E578EA]\nE       \t(No symbol) [0x00007FF6F5E22096]\nE       \t(No symbol) [0x00007FF6F5E57B00]\nE       \t(No symbol) [0x00007FF6F5E800B8]\nE       \t(No symbol) [0x00007FF6F5E576C3]\nE       \t(No symbol) [0x00007FF6F5E20490]\nE       \t(No symbol) [0x00007FF6F5E21743]\nE       \tGetHandleVerifier [0x00007FF6F634436D+3525677]\nE       \tGetHandleVerifier [0x00007FF6F6357F3B+3606523]\nE       \tGetHandleVerifier [0x00007FF6F634CEE3+3561379]\nE       \tGetHandleVerifier [0x00007FF6F60B7C0A+853194]\nE       \t(No symbol) [0x00007FF6F5F5990F]\nE       \t(No symbol) [0x00007FF6F5F55674]\nE       \t(No symbol) [0x00007FF6F5F55816]\nE       \t(No symbol) [0x00007FF6F5F44D89]\nE       \tBaseThreadInitThunk [0x00007FF8EA71E8D7+23]\nE       \tRtlUserThreadStart [0x00007FF8EC15BF6C+44]\n\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "description": "测试辅助阅卷流程", "steps": [{"name": "登录系统", "status": "passed", "attachments": [{"name": "login_success", "source": "78f19608-904e-46d9-88f2-9b6744c54173-attachment.png", "type": "image/png"}], "start": 1743130768671, "stop": 1743130783818}, {"name": "点击辅助阅卷", "status": "passed", "attachments": [{"name": "auxiliary_reading_clicked", "source": "e7d7e369-475a-4079-a6e4-b92b8a212c6f-attachment.png", "type": "image/png"}], "start": 1743130783818, "stop": 1743130785957}, {"name": "点击庭审笔录1", "status": "passed", "attachments": [{"name": "court_record1_clicked", "source": "d674d73b-df97-467e-bc13-4c60c1bb8165-attachment.png", "type": "image/png"}], "start": 1743130785957, "stop": 1743130788247}, {"name": "设为庭审笔录并输入处理意见", "status": "passed", "attachments": [{"name": "set_court_record_complete", "source": "85518b8a-1fa1-476c-9d8b-4b9786b4a32c-attachment.png", "type": "image/png"}], "start": 1743130788247, "stop": 1743130793828}, {"name": "取消设置庭审笔录", "status": "passed", "attachments": [{"name": "cancel_set_record_complete", "source": "3e27bd9e-8112-4559-8ddd-7f7e630eb0be-attachment.png", "type": "image/png"}], "start": 1743130793829, "stop": 1743130802523}, {"name": "下载笔录PDF", "status": "passed", "attachments": [{"name": "pdf_download_complete", "source": "d877693a-9f6e-4bc9-bded-1126f5252fb8-attachment.png", "type": "image/png"}], "start": 1743130802523, "stop": 1743130806888}, {"name": "添加庭审笔录2为证据", "status": "passed", "attachments": [{"name": "add_evidence_complete", "source": "84623e2e-71c1-46ef-843e-3624a04907c4-attachment.png", "type": "image/png"}], "start": 1743130806889, "stop": 1743130815504}, {"name": "将庭审笔录3添加为证据", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"ant-tree-checkbox-inner\"></span> is not clickable at point (67, 384). Other element would receive the click: <div tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"rcDialogTitle0\" class=\"ant-modal-wrap animate__animated animate__fadeInDownBig\">...</div>\n  (Session info: chrome=134.0.6998.177)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6F5FEDF85+26693]\n\t(No symbol) [0x00007FF6F5F4EAD0]\n\t(No symbol) [0x00007FF6F5DD91CA]\n\t(No symbol) [0x00007FF6F5E375E9]\n\t(No symbol) [0x00007FF6F5E34FA2]\n\t(No symbol) [0x00007FF6F5E32051]\n\t(No symbol) [0x00007FF6F5E30F76]\n\t(No symbol) [0x00007FF6F5E227E4]\n\t(No symbol) [0x00007FF6F5E578EA]\n\t(No symbol) [0x00007FF6F5E22096]\n\t(No symbol) [0x00007FF6F5E57B00]\n\t(No symbol) [0x00007FF6F5E800B8]\n\t(No symbol) [0x00007FF6F5E576C3]\n\t(No symbol) [0x00007FF6F5E20490]\n\t(No symbol) [0x00007FF6F5E21743]\n\tGetHandleVerifier [0x00007FF6F634436D+3525677]\n\tGetHandleVerifier [0x00007FF6F6357F3B+3606523]\n\tGetHandleVerifier [0x00007FF6F634CEE3+3561379]\n\tGetHandleVerifier [0x00007FF6F60B7C0A+853194]\n\t(No symbol) [0x00007FF6F5F5990F]\n\t(No symbol) [0x00007FF6F5F55674]\n\t(No symbol) [0x00007FF6F5F55816]\n\t(No symbol) [0x00007FF6F5F44D89]\n\tBaseThreadInitThunk [0x00007FF8EA71E8D7+23]\n\tRtlUserThreadStart [0x00007FF8EC15BF6C+44]\n\n", "trace": "  File \"E:\\AutoTest\\FgAI\\test_001\\AssistedG2.py\", line 87, in test_assisted_reading\n    self.assisted_page.add_court_record3_as_evidence()\n  File \"E:\\AutoTest\\FgAI\\pages\\assisted_reading_page.py\", line 314, in add_court_record3_as_evidence\n    court_record3_checkbox.click()\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1743130815504, "stop": 1743130816581}], "attachments": [{"name": "test_failed", "source": "8656d6bd-c282-4192-a7b8-8f0a78a758a9-attachment.png", "type": "image/png"}, {"name": "log", "source": "7591ff40-5eaf-47b2-9e55-7490c59dd115-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "ea943a96-7335-46f9-92e7-7754a7a0b8a8-attachment.txt", "type": "text/plain"}], "start": 1743130768671, "stop": 1743130816759, "uuid": "9db2622b-240f-4cf7-aade-f107630e4c48", "historyId": "2c447ee1694e423ad373f0ae9ae642e6", "testCaseId": "2c447ee1694e423ad373f0ae9ae642e6", "fullName": "test_001.AssistedG2.TestAssistedReading#test_assisted_reading", "labels": [{"name": "epic", "value": "FGAI自动化测试"}, {"name": "feature", "value": "辅助阅卷"}, {"name": "severity", "value": "critical"}, {"name": "story", "value": "辅助阅卷流程"}, {"name": "parentSuite", "value": "test_001"}, {"name": "suite", "value": "AssistedG2"}, {"name": "subSuite", "value": "TestAssistedReading"}, {"name": "host", "value": "DESKTOP-3S8JLNL"}, {"name": "thread", "value": "2268-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_001.AssistedG2"}]}