{"name": "测试案件的添加、修改和删除", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location", "trace": "self = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x0000021CFAEB8E80>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n>                   raise ValueError(f\"The path is not a valid file: {path}\")\nE                   ValueError: The path is not a valid file: E:\\AutoTest\\FgAI\\drivers\\chromedriver.exe\n\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:64: ValueError\n\nThe above exception was the direct cause of the following exception:\n\n    @pytest.fixture(scope=\"session\")\n    def driver():\n        \"\"\"提供WebDriver实例\"\"\"\n        try:\n            # 获取driver实例\n>           driver = DriverManager.get_driver()\n\n..\\conftest.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\driver_manager.py:56: in get_driver\n    cls._driver = webdriver.Chrome(service=service, options=chrome_options)\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x0000021CFAEB8E80>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n                    raise ValueError(f\"The path is not a valid file: {path}\")\n                self._paths[\"driver_path\"] = path\n            else:\n                output = SeleniumManager().binary_paths(self._to_args())\n                if Path(output[\"driver_path\"]).is_file():\n                    self._paths[\"driver_path\"] = output[\"driver_path\"]\n                else:\n                    raise ValueError(f'The driver path is not a valid file: {output[\"driver_path\"]}')\n                if Path(output[\"browser_path\"]).is_file():\n                    self._paths[\"browser_path\"] = output[\"browser_path\"]\n                else:\n                    raise ValueError(f'The browser path is not a valid file: {output[\"browser_path\"]}')\n        except Exception as err:\n            msg = f\"Unable to obtain driver for {browser}\"\n>           raise NoSuchDriverException(msg) from err\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:78: NoSuchDriverException"}, "description": "测试案件的添加、修改和删除功能", "attachments": [{"name": "log", "source": "8f991ec6-d49a-4ff5-8585-0b15d87368d0-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "20332ae1-9866-4ebe-8214-71f05dd39d6d-attachment.txt", "type": "text/plain"}], "start": 1742889535077, "stop": 1742889535077, "uuid": "cecd3227-f8ed-48c9-87d5-2cef9e399547", "historyId": "f35a86ea027d058924d82bec7f30547d", "testCaseId": "f35a86ea027d058924d82bec7f30547d", "fullName": "test_001.test_CaseMg.TestCaseManagement#test_case_crud", "labels": [{"name": "severity", "value": "critical"}, {"name": "epic", "value": "法官AI系统测试"}, {"name": "story", "value": "案件增删改功能"}, {"name": "feature", "value": "案件管理功能"}, {"name": "parentSuite", "value": "test_001"}, {"name": "suite", "value": "test_CaseMg"}, {"name": "subSuite", "value": "TestCaseManagement"}, {"name": "host", "value": "DESKTOP-3S8JLNL"}, {"name": "thread", "value": "7544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_001.test_CaseMg"}]}