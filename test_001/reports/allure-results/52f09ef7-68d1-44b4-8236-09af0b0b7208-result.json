{"name": "测试笔记内容的查找和替换", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <path d=\"M16 17.3a8 8 0 111.4-1.4l4.3 4.4a1 1 0 01-1.4 1.4l-4.4-4.3zm-5-.3a6 6 0 100-12 6 6 0 000 12z\" fill-rule=\"nonzero\"></path> is not clickable at point (411, 178). Other element would receive the click: <svg width=\"24\" height=\"24\">...</svg>\n  (Session info: chrome=135.0.7049.85)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6C1FBDF85+26693]\n\t(No symbol) [0x00007FF6C1F1EAD0]\n\t(No symbol) [0x00007FF6C1DA91CA]\n\t(No symbol) [0x00007FF6C1E075E9]\n\t(No symbol) [0x00007FF6C1E04FA2]\n\t(No symbol) [0x00007FF6C1E02051]\n\t(No symbol) [0x00007FF6C1E00F76]\n\t(No symbol) [0x00007FF6C1DF27E4]\n\t(No symbol) [0x00007FF6C1E278EA]\n\t(No symbol) [0x00007FF6C1DF2096]\n\t(No symbol) [0x00007FF6C1E27B00]\n\t(No symbol) [0x00007FF6C1E500B8]\n\t(No symbol) [0x00007FF6C1E276C3]\n\t(No symbol) [0x00007FF6C1DF0490]\n\t(No symbol) [0x00007FF6C1DF1743]\n\tGetHandleVerifier [0x00007FF6C231436D+3525677]\n\tGetHandleVerifier [0x00007FF6C2327F3B+3606523]\n\tGetHandleVerifier [0x00007FF6C231CEE3+3561379]\n\tGetHandleVerifier [0x00007FF6C2087C0A+853194]\n\t(No symbol) [0x00007FF6C1F2990F]\n\t(No symbol) [0x00007FF6C1F25674]\n\t(No symbol) [0x00007FF6C1F25816]\n\t(No symbol) [0x00007FF6C1F14D89]\n\tBaseThreadInitThunk [0x00007FF98108E8D7+23]\n\tRtlUserThreadStart [0x00007FF9825514FC+44]", "trace": "self = <FgAI.test_001.test_read_notes.TestReadNotes object at 0x00000215A3BBE070>\n\n    @allure.story(\"查找替换功能\")\n    @allure.title(\"测试笔记内容的查找和替换\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.flaky(reruns=2, reruns_delay=2)\n    def test_search_and_replace(self):\n        \"\"\"\n        测试查找替换功能：\n        1. 打开查找替换框\n        2. 输入查找和替换内容\n        3. 执行替换操作\n        4. 保存更改\n        \"\"\"\n        logger.info(\"开始测试查找替换功能...\")\n        try:\n            with allure.step(\"执行查找替换操作\"):\n>               self.read_notes.search_and_replace(\"号码\", \"号码\")\n\ntest_read_notes.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\read_notes_utils.py:157: in search_and_replace\n    self.safe_click(ReadNotesPage.SEARCH_REPLACE, \"查找替换按钮\")\n..\\common\\read_notes_utils.py:48: in safe_click\n    element.click()\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000215A3BBEC40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF6C1F14D89]\\\\n\\\\tBaseThreadInitThunk [0x00007FF98108E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FF9825514FC+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <path d=\"M16 17.3a8 8 0 111.4-1.4l4.3 4.4a1 1 0 01-1.4 1.4l-4.4-4.3zm-5-.3a6 6 0 100-12 6 6 0 000 12z\" fill-rule=\"nonzero\"></path> is not clickable at point (411, 178). Other element would receive the click: <svg width=\"24\" height=\"24\">...</svg>\nE         (Session info: chrome=135.0.7049.85)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6C1FBDF85+26693]\nE       \t(No symbol) [0x00007FF6C1F1EAD0]\nE       \t(No symbol) [0x00007FF6C1DA91CA]\nE       \t(No symbol) [0x00007FF6C1E075E9]\nE       \t(No symbol) [0x00007FF6C1E04FA2]\nE       \t(No symbol) [0x00007FF6C1E02051]\nE       \t(No symbol) [0x00007FF6C1E00F76]\nE       \t(No symbol) [0x00007FF6C1DF27E4]\nE       \t(No symbol) [0x00007FF6C1E278EA]\nE       \t(No symbol) [0x00007FF6C1DF2096]\nE       \t(No symbol) [0x00007FF6C1E27B00]\nE       \t(No symbol) [0x00007FF6C1E500B8]\nE       \t(No symbol) [0x00007FF6C1E276C3]\nE       \t(No symbol) [0x00007FF6C1DF0490]\nE       \t(No symbol) [0x00007FF6C1DF1743]\nE       \tGetHandleVerifier [0x00007FF6C231436D+3525677]\nE       \tGetHandleVerifier [0x00007FF6C2327F3B+3606523]\nE       \tGetHandleVerifier [0x00007FF6C231CEE3+3561379]\nE       \tGetHandleVerifier [0x00007FF6C2087C0A+853194]\nE       \t(No symbol) [0x00007FF6C1F2990F]\nE       \t(No symbol) [0x00007FF6C1F25674]\nE       \t(No symbol) [0x00007FF6C1F25816]\nE       \t(No symbol) [0x00007FF6C1F14D89]\nE       \tBaseThreadInitThunk [0x00007FF98108E8D7+23]\nE       \tRtlUserThreadStart [0x00007FF9825514FC+44]\n\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "description": "\n        测试查找替换功能：\n        1. 打开查找替换框\n        2. 输入查找和替换内容\n        3. 执行替换操作\n        4. 保存更改\n        ", "steps": [{"name": "执行查找替换操作", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <path d=\"M16 17.3a8 8 0 111.4-1.4l4.3 4.4a1 1 0 01-1.4 1.4l-4.4-4.3zm-5-.3a6 6 0 100-12 6 6 0 000 12z\" fill-rule=\"nonzero\"></path> is not clickable at point (411, 178). Other element would receive the click: <svg width=\"24\" height=\"24\">...</svg>\n  (Session info: chrome=135.0.7049.85)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6C1FBDF85+26693]\n\t(No symbol) [0x00007FF6C1F1EAD0]\n\t(No symbol) [0x00007FF6C1DA91CA]\n\t(No symbol) [0x00007FF6C1E075E9]\n\t(No symbol) [0x00007FF6C1E04FA2]\n\t(No symbol) [0x00007FF6C1E02051]\n\t(No symbol) [0x00007FF6C1E00F76]\n\t(No symbol) [0x00007FF6C1DF27E4]\n\t(No symbol) [0x00007FF6C1E278EA]\n\t(No symbol) [0x00007FF6C1DF2096]\n\t(No symbol) [0x00007FF6C1E27B00]\n\t(No symbol) [0x00007FF6C1E500B8]\n\t(No symbol) [0x00007FF6C1E276C3]\n\t(No symbol) [0x00007FF6C1DF0490]\n\t(No symbol) [0x00007FF6C1DF1743]\n\tGetHandleVerifier [0x00007FF6C231436D+3525677]\n\tGetHandleVerifier [0x00007FF6C2327F3B+3606523]\n\tGetHandleVerifier [0x00007FF6C231CEE3+3561379]\n\tGetHandleVerifier [0x00007FF6C2087C0A+853194]\n\t(No symbol) [0x00007FF6C1F2990F]\n\t(No symbol) [0x00007FF6C1F25674]\n\t(No symbol) [0x00007FF6C1F25816]\n\t(No symbol) [0x00007FF6C1F14D89]\n\tBaseThreadInitThunk [0x00007FF98108E8D7+23]\n\tRtlUserThreadStart [0x00007FF9825514FC+44]\n\n", "trace": "  File \"E:\\AutoTest\\FgAI\\test_001\\test_read_notes.py\", line 113, in test_search_and_replace\n    self.read_notes.search_and_replace(\"号码\", \"号码\")\n  File \"D:\\Python39\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"E:\\AutoTest\\FgAI\\common\\read_notes_utils.py\", line 157, in search_and_replace\n    self.safe_click(ReadNotesPage.SEARCH_REPLACE, \"查找替换按钮\")\n  File \"E:\\AutoTest\\FgAI\\common\\read_notes_utils.py\", line 48, in safe_click\n    element.click()\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "执行查找和替换", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <path d=\"M16 17.3a8 8 0 111.4-1.4l4.3 4.4a1 1 0 01-1.4 1.4l-4.4-4.3zm-5-.3a6 6 0 100-12 6 6 0 000 12z\" fill-rule=\"nonzero\"></path> is not clickable at point (411, 178). Other element would receive the click: <svg width=\"24\" height=\"24\">...</svg>\n  (Session info: chrome=135.0.7049.85)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6C1FBDF85+26693]\n\t(No symbol) [0x00007FF6C1F1EAD0]\n\t(No symbol) [0x00007FF6C1DA91CA]\n\t(No symbol) [0x00007FF6C1E075E9]\n\t(No symbol) [0x00007FF6C1E04FA2]\n\t(No symbol) [0x00007FF6C1E02051]\n\t(No symbol) [0x00007FF6C1E00F76]\n\t(No symbol) [0x00007FF6C1DF27E4]\n\t(No symbol) [0x00007FF6C1E278EA]\n\t(No symbol) [0x00007FF6C1DF2096]\n\t(No symbol) [0x00007FF6C1E27B00]\n\t(No symbol) [0x00007FF6C1E500B8]\n\t(No symbol) [0x00007FF6C1E276C3]\n\t(No symbol) [0x00007FF6C1DF0490]\n\t(No symbol) [0x00007FF6C1DF1743]\n\tGetHandleVerifier [0x00007FF6C231436D+3525677]\n\tGetHandleVerifier [0x00007FF6C2327F3B+3606523]\n\tGetHandleVerifier [0x00007FF6C231CEE3+3561379]\n\tGetHandleVerifier [0x00007FF6C2087C0A+853194]\n\t(No symbol) [0x00007FF6C1F2990F]\n\t(No symbol) [0x00007FF6C1F25674]\n\t(No symbol) [0x00007FF6C1F25816]\n\t(No symbol) [0x00007FF6C1F14D89]\n\tBaseThreadInitThunk [0x00007FF98108E8D7+23]\n\tRtlUserThreadStart [0x00007FF9825514FC+44]\n\n", "trace": "  File \"D:\\Python39\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"E:\\AutoTest\\FgAI\\common\\read_notes_utils.py\", line 157, in search_and_replace\n    self.safe_click(ReadNotesPage.SEARCH_REPLACE, \"查找替换按钮\")\n  File \"E:\\AutoTest\\FgAI\\common\\read_notes_utils.py\", line 48, in safe_click\n    element.click()\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "search_text", "value": "'号码'"}, {"name": "replace_text", "value": "'号码'"}], "start": 1744710935058, "stop": 1744710940283}], "start": 1744710935058, "stop": 1744710940288}], "attachments": [{"name": "查找替换失败", "source": "f99e871c-2ee6-4109-986d-0283584c9546-attachment.png", "type": "image/png"}, {"name": "log", "source": "bad49a18-9869-49f2-97f6-90230c7e9c92-attachment.txt", "type": "text/plain"}], "start": 1744710935058, "stop": 1744710940385, "uuid": "a46d3af6-3518-42a2-8bb6-58f601d3c0cb", "historyId": "1e719401c7fda4e1196eee974a10e981", "testCaseId": "1e719401c7fda4e1196eee974a10e981", "fullName": "test_001.test_read_notes.TestReadNotes#test_search_and_replace", "labels": [{"name": "feature", "value": "阅卷笔记模块"}, {"name": "story", "value": "查找替换功能"}, {"name": "epic", "value": "案件管理系统"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "flaky(reruns=2, reruns_delay=2)"}, {"name": "parentSuite", "value": "test_001"}, {"name": "suite", "value": "test_read_notes"}, {"name": "subSuite", "value": "TestReadNotes"}, {"name": "host", "value": "DESKTOP-3S8JLNL"}, {"name": "thread", "value": "12800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_001.test_read_notes"}]}