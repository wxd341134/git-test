{"name": "测试文本选择和格式化", "status": "broken", "statusDetails": {"message": "AttributeError: 'ReadNotesUtils' object has no attribute 'page'", "trace": "self = <FgAI.test_001.test_read_notes.TestReadNotes object at 0x0000014815B37790>\n\n    @allure.story(\"文本格式化功能\")\n    @allure.title(\"测试文本选择和格式化\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.flaky(reruns=2, reruns_delay=2)\n    def test_format_selected_text(self):\n        \"\"\"\n        测试文本格式化功能：\n        1. 使用JavaScript选中文本\n        2. 更改字体为楷体\n        3. 更改字号为二号\n        4. 设置行高为1.75\n        5. 设置加粗和斜体\n        6. 保存更改\n        \"\"\"\n        logger.info(\"开始测试文本格式化功能...\")\n        try:\n            with allure.step(\"选中文本并执行格式化\"):\n>               self.read_notes.format_selected_text()\n\ntest_read_notes.py:165: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.read_notes_utils.ReadNotesUtils object at 0x0000014815B743A0>\ntext_to_select = '原告欠款560000元'\n\n    @allure.step(\"执行文本格式化操作\")\n    def format_selected_text(self, text_to_select=\"原告欠款560000元\"):\n        \"\"\"\n        对选中文本执行一系列格式化操作\n        :param text_to_select: 要选中的文本\n        \"\"\"\n        try:\n            logger.info(f\"开始执行文本格式化操作: {text_to_select}\")\n    \n            # 1. 切换到iframe并使用JavaScript选中文本\n            self.switch_to_notes_frame()\n    \n            select_script = \"\"\"\n                function selectText(searchText) {\n                    const walker = document.createTreeWalker(\n                        document.body,\n                        NodeFilter.SHOW_TEXT,\n                        null,\n                        false\n                    );\n    \n                    let node;\n                    while (node = walker.nextNode()) {\n                        const index = node.textContent.indexOf(searchText);\n                        if (index >= 0) {\n                            const range = document.createRange();\n                            range.setStart(node, index);\n                            range.setEnd(node, index + searchText.length);\n    \n                            const selection = window.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n    \n                            node.parentElement.scrollIntoView({\n                                behavior: 'instant',\n                                block: 'center'\n                            });\n    \n                            const mouseupEvent = new MouseEvent('mouseup', {\n                                bubbles: true,\n                                cancelable: true,\n                                view: window\n                            });\n                            node.parentElement.dispatchEvent(mouseupEvent);\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n                return selectText(arguments[0]);\n                \"\"\"\n    \n            result = self.driver.execute_script(select_script, text_to_select)\n            if not result:\n                raise Exception(f\"未找到文本: {text_to_select}\")\n    \n            # 切回主文档进行格式化操作\n            self.switch_to_main_content()\n    \n            # 2. 更改字体为楷体\n            logger.info(\"开始更改字体...\")\n            font_button = self.wait.until(\n>               EC.element_to_be_clickable(self.page.FONT_FANGSONG)\n            )\nE           AttributeError: 'ReadNotesUtils' object has no attribute 'page'\n\n..\\common\\read_notes_utils.py:307: AttributeError"}, "description": "\n        测试文本格式化功能：\n        1. 使用JavaScript选中文本\n        2. 更改字体为楷体\n        3. 更改字号为二号\n        4. 设置行高为1.75\n        5. 设置加粗和斜体\n        6. 保存更改\n        ", "steps": [{"name": "选中文本并执行格式化", "status": "broken", "statusDetails": {"message": "AttributeError: 'ReadNotesUtils' object has no attribute 'page'\n", "trace": "  File \"E:\\AutoTest\\FgAI\\test_001\\test_read_notes.py\", line 165, in test_format_selected_text\n    self.read_notes.format_selected_text()\n  File \"D:\\Python39\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"E:\\AutoTest\\FgAI\\common\\read_notes_utils.py\", line 307, in format_selected_text\n    EC.element_to_be_clickable(self.page.FONT_FANGSONG)\n"}, "steps": [{"name": "执行文本格式化操作", "status": "broken", "statusDetails": {"message": "AttributeError: 'ReadNotesUtils' object has no attribute 'page'\n", "trace": "  File \"D:\\Python39\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"E:\\AutoTest\\FgAI\\common\\read_notes_utils.py\", line 307, in format_selected_text\n    EC.element_to_be_clickable(self.page.FONT_FANGSONG)\n"}, "attachments": [{"name": "操作失败截图", "source": "015c5730-45f3-44f2-a700-b672561980e4-attachment.png", "type": "image/png"}], "parameters": [{"name": "text_to_select", "value": "'原告欠款560000元'"}], "start": 1744787611534, "stop": 1744787612716}], "start": 1744787611534, "stop": 1744787612743}], "attachments": [{"name": "log", "source": "f47c57f4-7e43-4f88-b7d4-7e2ad023f13e-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "9c1a2cae-7bd3-4d4a-963d-6a226f209056-attachment.txt", "type": "text/plain"}], "start": 1744787611533, "stop": 1744787612745, "uuid": "91f6b7af-5fa3-4acd-b426-17be9e3fdc68", "historyId": "11ea29f10876ae296900870ecd96a087", "testCaseId": "11ea29f10876ae296900870ecd96a087", "fullName": "test_001.test_read_notes.TestReadNotes#test_format_selected_text", "labels": [{"name": "story", "value": "文本格式化功能"}, {"name": "feature", "value": "阅卷笔记模块"}, {"name": "severity", "value": "normal"}, {"name": "epic", "value": "案件管理系统"}, {"name": "tag", "value": "flaky(reruns=2, reruns_delay=2)"}, {"name": "parentSuite", "value": "test_001"}, {"name": "suite", "value": "test_read_notes"}, {"name": "subSuite", "value": "TestReadNotes"}, {"name": "host", "value": "DESKTOP-3S8JLNL"}, {"name": "thread", "value": "27104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_001.test_read_notes"}]}