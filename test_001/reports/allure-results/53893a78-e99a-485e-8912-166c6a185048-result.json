{"name": "辅助阅卷测试", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6780FDF85+26693]\n\t(No symbol) [0x00007FF67805EAD0]\n\t(No symbol) [0x00007FF677EE91CA]\n\t(No symbol) [0x00007FF677F3F747]\n\t(No symbol) [0x00007FF677F3F97C]\n\t(No symbol) [0x00007FF677F933C7]\n\t(No symbol) [0x00007FF677F6792F]\n\t(No symbol) [0x00007FF677F900B8]\n\t(No symbol) [0x00007FF677F676C3]\n\t(No symbol) [0x00007FF677F30490]\n\t(No symbol) [0x00007FF677F31743]\n\tGetHandleVerifier [0x00007FF67845436D+3525677]\n\tGetHandleVerifier [0x00007FF678467F3B+3606523]\n\tGetHandleVerifier [0x00007FF67845CEE3+3561379]\n\tGetHandleVerifier [0x00007FF6781C7C0A+853194]\n\t(No symbol) [0x00007FF67806990F]\n\t(No symbol) [0x00007FF678065674]\n\t(No symbol) [0x00007FF678065816]\n\t(No symbol) [0x00007FF678054D89]\n\tBaseThreadInitThunk [0x00007FF8EA71E8D7+23]\n\tRtlUserThreadStart [0x00007FF8EC15BF6C+44]", "trace": "self = <FgAI.test_001.AssistedG.TestAssistedReading object at 0x000001F843E3F4F0>\n\n    @allure.story(\"辅助阅卷流程\")\n    @allure.title(\"辅助阅卷测试\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_assisted_reading(self):\n        \"\"\"测试辅助阅卷流程\"\"\"\n        try:\n            # 1. 登录系统\n            with allure.step(\"登录系统\"):\n                logger.info(\"开始登录系统\")\n                self.login_page.login()\n                time.sleep(2)\n                logger.info(\"登录成功\")\n                try:\n                    allure.attach(\n                        self.driver.get_screenshot_as_png(),\n                        name=\"login_success\",\n                        attachment_type=allure.attachment_type.PNG\n                    )\n                except:\n                    logger.warning(\"无法获取登录成功截图\")\n    \n            # 2. 点击辅助阅卷\n            with allure.step(\"点击辅助阅卷\"):\n                logger.info(\"点击辅助阅卷\")\n                auxiliary_reading = self.wait.until(\n                    EC.element_to_be_clickable(self.auxiliary_reading)\n                )\n                auxiliary_reading.click()\n                time.sleep(2)\n                logger.info(\"步骤1执行成功：点击辅助阅卷\")\n                try:\n                    allure.attach(\n                        self.driver.get_screenshot_as_png(),\n                        name=\"auxiliary_reading_clicked\",\n                        attachment_type=allure.attachment_type.PNG\n                    )\n                except:\n                    logger.warning(\"无法获取辅助阅卷截图\")\n    \n            # 3. 点击庭审笔录1\n            with allure.step(\"点击庭审笔录1\"):\n                logger.info(\"点击庭审笔录1\")\n                court_record = self.wait.until(\n                    EC.element_to_be_clickable(self.court_record)\n                )\n                court_record.click()\n                time.sleep(1)\n                logger.info(\"步骤2执行成功：点击庭审笔录1\")\n    \n            # 4. 点击设为庭审笔录\n            with allure.step(\"点击设为庭审笔录\"):\n                logger.info(\"点击设为庭审笔录\")\n>               set_record = self.wait.until(\n                    EC.element_to_be_clickable(self.set_record)\n                )\n\nAssistedG.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8fe47d5e255bd51b7e24d04196285a9d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001F843D66940>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6780FDF85+26693]\nE       \t(No symbol) [0x00007FF67805EAD0]\nE       \t(No symbol) [0x00007FF677EE91CA]\nE       \t(No symbol) [0x00007FF677F3F747]\nE       \t(No symbol) [0x00007FF677F3F97C]\nE       \t(No symbol) [0x00007FF677F933C7]\nE       \t(No symbol) [0x00007FF677F6792F]\nE       \t(No symbol) [0x00007FF677F900B8]\nE       \t(No symbol) [0x00007FF677F676C3]\nE       \t(No symbol) [0x00007FF677F30490]\nE       \t(No symbol) [0x00007FF677F31743]\nE       \tGetHandleVerifier [0x00007FF67845436D+3525677]\nE       \tGetHandleVerifier [0x00007FF678467F3B+3606523]\nE       \tGetHandleVerifier [0x00007FF67845CEE3+3561379]\nE       \tGetHandleVerifier [0x00007FF6781C7C0A+853194]\nE       \t(No symbol) [0x00007FF67806990F]\nE       \t(No symbol) [0x00007FF678065674]\nE       \t(No symbol) [0x00007FF678065816]\nE       \t(No symbol) [0x00007FF678054D89]\nE       \tBaseThreadInitThunk [0x00007FF8EA71E8D7+23]\nE       \tRtlUserThreadStart [0x00007FF8EC15BF6C+44]\n\nD:\\Python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "测试辅助阅卷流程", "steps": [{"name": "登录系统", "status": "passed", "attachments": [{"name": "login_success", "source": "d49d1d02-fc38-4736-8473-47b89c58f077-attachment.png", "type": "image/png"}], "start": 1743039408491, "stop": 1743039421475}, {"name": "点击辅助阅卷", "status": "passed", "attachments": [{"name": "auxiliary_reading_clicked", "source": "30aa9a62-b578-4b05-a40c-f2c0a59fb6a2-attachment.png", "type": "image/png"}], "start": 1743039421475, "stop": 1743039423637}, {"name": "点击庭审笔录1", "status": "passed", "start": 1743039423637, "stop": 1743039424706}, {"name": "点击设为庭审笔录", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6780FDF85+26693]\n\t(No symbol) [0x00007FF67805EAD0]\n\t(No symbol) [0x00007FF677EE91CA]\n\t(No symbol) [0x00007FF677F3F747]\n\t(No symbol) [0x00007FF677F3F97C]\n\t(No symbol) [0x00007FF677F933C7]\n\t(No symbol) [0x00007FF677F6792F]\n\t(No symbol) [0x00007FF677F900B8]\n\t(No symbol) [0x00007FF677F676C3]\n\t(No symbol) [0x00007FF677F30490]\n\t(No symbol) [0x00007FF677F31743]\n\tGetHandleVerifier [0x00007FF67845436D+3525677]\n\tGetHandleVerifier [0x00007FF678467F3B+3606523]\n\tGetHandleVerifier [0x00007FF67845CEE3+3561379]\n\tGetHandleVerifier [0x00007FF6781C7C0A+853194]\n\t(No symbol) [0x00007FF67806990F]\n\t(No symbol) [0x00007FF678065674]\n\t(No symbol) [0x00007FF678065816]\n\t(No symbol) [0x00007FF678054D89]\n\tBaseThreadInitThunk [0x00007FF8EA71E8D7+23]\n\tRtlUserThreadStart [0x00007FF8EC15BF6C+44]\n\n", "trace": "  File \"E:\\AutoTest\\FgAI\\test_001\\AssistedG.py\", line 113, in test_assisted_reading\n    set_record = self.wait.until(\n  File \"D:\\Python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1743039424706, "stop": 1743039434721}], "attachments": [{"name": "test_failed", "source": "8f90af58-9180-41a6-a830-8f43dfbaae1c-attachment.png", "type": "image/png"}, {"name": "log", "source": "c4df6f6b-76bf-4155-9205-4934bf603139-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a8a9a27c-d5a1-423e-9619-14783bea148c-attachment.txt", "type": "text/plain"}], "start": 1743039408491, "stop": 1743039434963, "uuid": "50b080f9-88ff-4892-91be-e1bb042525e6", "historyId": "bcbc7cf4b4f79be87767f13c16480802", "testCaseId": "bcbc7cf4b4f79be87767f13c16480802", "fullName": "test_001.AssistedG.TestAssistedReading#test_assisted_reading", "labels": [{"name": "epic", "value": "FGAI自动化测试"}, {"name": "feature", "value": "辅助阅卷"}, {"name": "severity", "value": "critical"}, {"name": "story", "value": "辅助阅卷流程"}, {"name": "parentSuite", "value": "test_001"}, {"name": "suite", "value": "AssistedG"}, {"name": "subSuite", "value": "TestAssistedReading"}, {"name": "host", "value": "DESKTOP-3S8JLNL"}, {"name": "thread", "value": "5056-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_001.AssistedG"}]}